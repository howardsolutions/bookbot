[
    {
        "label": "get_book_text",
        "importPath": "stats",
        "description": "stats",
        "isExtraImport": true,
        "detail": "stats",
        "documentation": {}
    },
    {
        "label": "print_book_report",
        "importPath": "stats",
        "description": "stats",
        "isExtraImport": true,
        "detail": "stats",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main():\n    book_contents = get_book_text('./books/frankenstein.txt')\n    sorted_chars = print_book_report(book_contents)\nmain()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_book_text",
        "kind": 2,
        "importPath": "stats",
        "description": "stats",
        "peekOfCode": "def get_book_text(file_path):\n    with open(file_path) as f:\n        file_contents = f.read()\n        return file_contents\ndef count_words_in_book(contents):\n    list_of_words = contents.split()\n    num_words = len(list_of_words)\n    return num_words\ndef count_characters(text):\n    char_count = {}",
        "detail": "stats",
        "documentation": {}
    },
    {
        "label": "count_words_in_book",
        "kind": 2,
        "importPath": "stats",
        "description": "stats",
        "peekOfCode": "def count_words_in_book(contents):\n    list_of_words = contents.split()\n    num_words = len(list_of_words)\n    return num_words\ndef count_characters(text):\n    char_count = {}\n    for char in text.lower():\n        if char.isalpha():  # Only count alphabetical characters\n            if char in char_count:\n                char_count[char] += 1",
        "detail": "stats",
        "documentation": {}
    },
    {
        "label": "count_characters",
        "kind": 2,
        "importPath": "stats",
        "description": "stats",
        "peekOfCode": "def count_characters(text):\n    char_count = {}\n    for char in text.lower():\n        if char.isalpha():  # Only count alphabetical characters\n            if char in char_count:\n                char_count[char] += 1\n            else:\n                char_count[char] = 1\n    return char_count\ndef print_book_report(book_contents):",
        "detail": "stats",
        "documentation": {}
    },
    {
        "label": "print_book_report",
        "kind": 2,
        "importPath": "stats",
        "description": "stats",
        "peekOfCode": "def print_book_report(book_contents):\n    characters_dict = count_characters(book_contents)\n    char_list = []\n    for char, count in characters_dict.items():\n        char_list.append({\"char\": char, \"count\": count})\n    char_list.sort(reverse=True, key=lambda x: x[\"count\"])\n    print(\"============ BOOKBOT ============\")\n    print(\"Analyzing book found at books/frankenstein.txt...\")\n    print(\"----------- Word Count ----------\")\n    print(f\"Found {count_words_in_book(book_contents)} total words\")",
        "detail": "stats",
        "documentation": {}
    }
]